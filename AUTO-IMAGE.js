/**
 * WPlace Auto-Image Bot (versão remodelada e responsiva)
 * 
 * Autor base: Eduardo854833 (script reconstituído)
 * Redesign + ajustes de drag: (esta versão)
 * 
 * Atualização 2025-08-15: Correção do drag em mobile/desktop.
 * - Substituído listeners de mouse/touch por Pointer Events unificados.
 * - Conversão inicial de right->left para evitar saltos.
 * - Clamp de limites da tela para não perder o painel.
 * - touch-action:none apenas no header; restante pode rolar normalmente.
 * - Evita seleção acidental e comportamento passivo que impedia preventDefault.
 */

(async () => {
  // ---------------------------------------------------------------------------
  // Configurações base
  // ---------------------------------------------------------------------------
  const CONFIG = {
    COOLDOWN_DEFAULT: 31000,
    TRANSPARENCY_THRESHOLD: 100,
    WHITE_THRESHOLD: 250,
    LOG_INTERVAL: 10,
    PIXEL_DELAY_FAST: 20,
    PIXEL_DELAY_NORMAL: 60,
    PIXEL_DELAY_SAFE: 140,
    THEME_DARK: {
      name: "dark",
      primary: "#0f141c",
      secondary: "#182230",
      accent: "#243245",
      text: "#f5f7fa",
      highlight: "#54d5ff",
      success: "#35d07f",
      error: "#ff4d61",
      warning: "#ffb347",
      border: "rgba(255,255,255,.1)",
      glow: "rgba(84,213,255,.45)"
    },
    THEME_LIGHT: {
      name: "light",
      primary: "#f2f6fb",
      secondary: "#ffffff",
      accent: "#e3edf6",
      text: "#19212b",
      highlight: "#007bc7",
      success: "#1e8c57",
      error: "#d63142",
      warning: "#c97908",
      border: "rgba(0,0,0,.12)",
      glow: "rgba(0,123,199,.35)"
    }
  };

  // ---------------------------------------------------------------------------
  // Textos multilíngues
  // ---------------------------------------------------------------------------
  const TEXTS = { /* (mantidos iguais - omitido por brevidade na explicação, presentes abaixo) */ };

  // (==== Todo o bloco TEXTS original completo ====)
  const TEXTS_FULL = {"pt":{"title":"Auto Imagem WPlace","initBot":"Iniciar Bot","uploadImage":"Carregar Imagem","resizeImage":"Redimensionar","selectPosition":"Definir Posição","startPainting":"Começar a Pintura","stopPainting":"Parar","resumePainting":"Retomar","checkingColors":"🔍 Verificando cores disponíveis...","noColorsFound":"❌ Abra a paleta de cores e tente novamente.","colorsFound":"✅ {count} cores disponíveis","loadingImage":"🖼️ Carregando imagem...","imageLoaded":"✅ Imagem com {count} pixels válidos","imageError":"❌ Erro ao carregar a imagem","selectPositionAlert":"Clique para pintar o primeiro pixel onde a arte começará.","waitingPosition":"👆 Aguardando o pixel de referência...","positionSet":"✅ Posição definida!","positionTimeout":"❌ Tempo esgotado para selecionar posição","startPaintingMsg":"🎨 Começando a pintura...","paintingProgress":"🧱 Progresso: {painted}/{total}","noCharges":"⌛ Sem cargas. Aguardando {time}...","paintingStopped":"⏹️ Pintura pausada","paintingComplete":"✅ Pintura concluída! {count} pixels.","paintingError":"❌ Erro durante a pintura","missingRequirements":"❌ Carregue a imagem e defina a posição primeiro","progress":"Progresso","pixels":"Pixels","charges":"Cargas","estimatedTime":"Tempo Estimado","initMessage":"Pressione 'Iniciar Bot' para começar","waitingInit":"Aguardando inicialização...","resizeSuccess":"✅ Redimensionada para {width}x{height}","paintingPaused":"⏸️ Pausado em X:{x} Y:{y}","minimize":"Minimizar","width":"Largura","height":"Altura","keepAspect":"Manter proporção","apply":"Aplicar","cancel":"Cancelar","settings":"Opções","order":"Ordem","order_ltr":"Esq → Dir","order_rtl":"Dir → Esq","order_random":"Aleatória","speed":"Velocidade","speed_safe":"Segura","speed_normal":"Normal","speed_fast":"Rápida","skipWhite":"Ignorar Branco","skipTransparent":"Ignorar Transparente","theme":"Tema","theme_dark":"Escuro","theme_light":"Claro","language":"Idioma","listRebuilt":"Lista de pixels gerada: {count}","rebuildList":"Atualizar Pixels","advanced":"Avançado","confirmStop":"Bot pausado","pixelsPerSec":"px/s (estim.)","modeUpdated":"Configurações aplicadas","langChanged":"Idioma alterado","themeChanged":"Tema alterado"},"en":{"title":"WPlace Auto Image","initBot":"Start Bot","uploadImage":"Upload Image","resizeImage":"Resize","selectPosition":"Set Position","startPainting":"Begin Painting","stopPainting":"Stop","resumePainting":"Resume","checkingColors":"🔍 Checking available colors...","noColorsFound":"❌ Open the palette and try again.","colorsFound":"✅ {count} colors found","loadingImage":"🖼️ Loading image...","imageLoaded":"✅ Image with {count} valid pixels","imageError":"❌ Error loading image","selectPositionAlert":"Click to paint the first pixel where art starts.","waitingPosition":"👆 Waiting for reference pixel...","positionSet":"✅ Position set!","positionTimeout":"❌ Position selection timeout","startPaintingMsg":"🎨 Starting painting...","paintingProgress":"🧱 Progress: {painted}/{total}","noCharges":"⌛ No charges. Waiting {time}...","paintingStopped":"⏹️ Painting paused","paintingComplete":"✅ Painting finished! {count} pixels.","paintingError":"❌ Error during painting","missingRequirements":"❌ Load image and set position first","progress":"Progress","pixels":"Pixels","charges":"Charges","estimatedTime":"ETA","initMessage":"Press 'Start Bot' to begin","waitingInit":"Awaiting initialization...","resizeSuccess":"✅ Resized to {width}x{height}","paintingPaused":"⏸️ Paused at X:{x} Y:{y}","minimize":"Minimize","width":"Width","height":"Height","keepAspect":"Keep aspect","apply":"Apply","cancel":"Cancel","settings":"Settings","order":"Order","order_ltr":"Left → Right","order_rtl":"Right → Left","order_random":"Random","speed":"Speed","speed_safe":"Safe","speed_normal":"Normal","speed_fast":"Fast","skipWhite":"Skip White","skipTransparent":"Skip Transparent","theme":"Theme","theme_dark":"Dark","theme_light":"Light","language":"Language","listRebuilt":"Pixel list built: {count}","rebuildList":"Rebuild Pixels","advanced":"Advanced","confirmStop":"Bot paused","pixelsPerSec":"px/s (est.)","modeUpdated":"Settings applied","langChanged":"Language changed","themeChanged":"Theme changed"}};
  const TEXTS_OBJ = TEXTS_FULL; // usar este

  // ---------------------------------------------------------------------------
  // Estado global
  // ---------------------------------------------------------------------------
  const state = { /* (igual ao original) */ };
  Object.assign(state, {running:false,stopFlag:false,imageLoaded:false,colorsChecked:false,availableColors:[],currentCharges:0,cooldown:CONFIG.COOLDOWN_DEFAULT,imageData:null,startPosition:null,region:null,lastPosition:{x:0,y:0},estimatedTime:0,language:"pt",theme:CONFIG.THEME_DARK.name,minimized:false,pixelList:[],pixelIndex:0,settings:{order:"ltr",speed:"normal",skipWhite:true,skipTransparent:true},perf:{startTime:0,paintedAtStart:0,recent:[]}});

  function detectLanguage(){const lang=(navigator.language||"en").split("-")[0]; if(TEXTS_OBJ[lang]) state.language=lang;}

  // Utilitários
  const utils={sleep:ms=>new Promise(r=>setTimeout(r,ms)),colorDistance:(a,b)=>Math.sqrt((a[0]-b[0])**2+(a[1]-b[1])**2+(a[2]-b[2])**2),createImageUploader:()=>new Promise(res=>{const i=document.createElement('input');i.type='file';i.accept='image/png,image/jpeg';i.onchange=()=>{const fr=new FileReader();fr.onload=()=>res(fr.result);fr.readAsDataURL(i.files[0]);};i.click();}),extractAvailableColors:()=>Array.from(document.querySelectorAll('[id^="color-"]')).filter(el=>!el.querySelector('svg')).filter(el=>{const id=parseInt(el.id.replace('color-',''));return id!==0 && id!==5;}).map(el=>{const id=parseInt(el.id.replace('color-',''));const m=el.style.backgroundColor.match(/\d+/g);const rgb=m?m.map(Number):[0,0,0];return {id,rgb};}),formatTime:ms=>{if(ms<0)ms=0;const s=Math.floor(ms/1000);if(s<60)return s+"s";const m=Math.floor(s/60);const sec=s%60;if(m<60)return `${m}m ${sec}s`;const h=Math.floor(m/60);const min=h%60;if(h<24)return `${h}h ${min}m`;const d=Math.floor(h/24);const hr=h%24;return `${d}d ${hr}h`;},showToast:(text,themeObj,time=2600)=>{const d=document.createElement('div');Object.assign(d.style,{position:'fixed',bottom:'20px',left:'50%',transform:'translateX(-50%)',padding:'12px 18px',background:`linear-gradient(145deg,${themeObj.accent},${themeObj.secondary})`,color:themeObj.text,border:`1px solid ${themeObj.highlight}`,borderRadius:'14px',font:'500 14px "Segoe UI",sans-serif',zIndex:'10000',boxShadow:`0 8px 28px -8px ${themeObj.glow}`});d.textContent=text;document.body.appendChild(d);setTimeout(()=>{d.style.transition='all .4s';d.style.opacity='0';d.style.transform+=' translateY(10px)';setTimeout(()=>d.remove(),450);},time);},isWhitePixel:(r,g,b)=>r>=CONFIG.WHITE_THRESHOLD&&g>=CONFIG.WHITE_THRESHOLD&&b>=CONFIG.WHITE_THRESHOLD,t:(k,vars={})=>{let s=TEXTS_OBJ[state.language]?.[k]||TEXTS_OBJ.en[k]||k;Object.entries(vars).forEach(([k2,v])=>s=s.replace(`{${k2}}`,v));return s;},calculateEstimatedTime:(remaining,charges,cooldown)=>{if(remaining<=0)return 0;const pd=utils.getPixelDelay();if(charges>remaining)return remaining*pd;const cycles=Math.ceil(remaining/Math.max(charges,1));return cycles*cooldown+remaining*pd;},getPixelDelay:()=>({fast:CONFIG.PIXEL_DELAY_FAST,safe:CONFIG.PIXEL_DELAY_SAFE})[state.settings.speed]||CONFIG.PIXEL_DELAY_NORMAL,shuffle:arr=>{for(let i=arr.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[arr[i],arr[j]]=[arr[j],arr[i]];}return arr;}};

  const api={async paintPixelInRegion(rx,ry,x,y,colorId){try{const r=await fetch(`https://backend.wplace.live/s0/pixel/${rx}/${ry}`,{method:'POST',headers:{'Content-Type':'text/plain;charset=UTF-8'},credentials:'include',body:JSON.stringify({coords:[x,y],colors:[colorId]})});const j=await r.json();return j?.painted===1;}catch{return false;}},async getCharges(){try{const r=await fetch('https://backend.wplace.live/me',{credentials:'include'});const j=await r.json();return {charges:j.charges?.count||0,cooldown:j.charges?.cooldownMs||CONFIG.COOLDOWN_DEFAULT};}catch{return {charges:0,cooldown:CONFIG.COOLDOWN_DEFAULT};}}};

  class ImageProcessor{constructor(src){this.imageSrc=src;this.img=new Image();this.canvas=document.createElement('canvas');this.ctx=this.canvas.getContext('2d');this.previewCanvas=document.createElement('canvas');this.previewCtx=this.previewCanvas.getContext('2d');}async load(){return new Promise((res,rej)=>{this.img.onload=()=>{this.canvas.width=this.img.width;this.canvas.height=this.img.height;this.ctx.drawImage(this.img,0,0);res();};this.img.onerror=rej;this.img.src=this.imageSrc;});}getPixelData(){return this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height).data;}getDimensions(){return {width:this.canvas.width,height:this.canvas.height};}resize(w,h){const tmp=document.createElement('canvas');tmp.width=w;tmp.height=h;const c=tmp.getContext('2d');c.imageSmoothingEnabled=false;c.drawImage(this.img,0,0,w,h);this.canvas.width=w;this.canvas.height=h;this.ctx.drawImage(tmp,0,0);return this.getPixelData();}generatePreview(w,h){this.previewCanvas.width=w;this.previewCanvas.height=h;this.previewCtx.imageSmoothingEnabled=false;this.previewCtx.drawImage(this.img,0,0,w,h);return this.previewCanvas.toDataURL();}}

  function mapToNearestColor(rgb,palette){return palette.reduce((acc,c)=>{const d=utils.colorDistance(rgb,c.rgb);return d<acc.dist?{id:c.id,dist:d}:acc;},{id:palette[0].id,dist:utils.colorDistance(rgb,palette[0].rgb)}).id;}

  function buildPixelList(){if(!state.imageData)return;const {width,height,pixels}=state.imageData;const list=[];for(let y=0;y<height;y++){for(let x=0;x<width;x++){const idx=(y*width+x)*4;const r=pixels[idx];const g=pixels[idx+1];const b=pixels[idx+2];const a=pixels[idx+3];if(state.settings.skipTransparent&&a<CONFIG.TRANSPARENCY_THRESHOLD)continue;if(state.settings.skipWhite&&utils.isWhitePixel(r,g,b))continue;list.push({x,y,idx,r,g,b,a});}}if(state.settings.order==='rtl'){list.sort((p1,p2)=>p2.y===p1.y?p2.x-p1.x:p1.y-p2.y);}else if(state.settings.order==='ltr'){list.sort((p1,p2)=>p1.y===p2.y?p1.x-p2.x:p1.y-p2.y);}else utils.shuffle(list);state.pixelList=list;state.pixelIndex=0;state.imageData.totalPixels=list.length;state.totalPixels=list.length;window.updateStats&&window.updateStats();window.updateUI&&window.updateUI('listRebuilt','success',{count:list.length});}

  let root,themeStyle;function currentThemeObj(){return state.theme==='light'?CONFIG.THEME_LIGHT:CONFIG.THEME_DARK;}
  function applyTheme(){const t=currentThemeObj();if(!themeStyle){themeStyle=document.createElement('style');document.head.appendChild(themeStyle);}themeStyle.textContent=`:root{--w-bg-primary:${t.primary};--w-bg-secondary:${t.secondary};--w-bg-accent:${t.accent};--w-text:${t.text};--w-highlight:${t.highlight};--w-success:${t.success};--w-error:${t.error};--w-warning:${t.warning};--w-border:${t.border};--w-glow:${t.glow};}`;if(root)root.setAttribute('data-theme',t.name);} 

  // ===== NOVO SISTEMA DE DRAG (Pointer Events) =====
  function initDrag(handle,container){let startX,startY,origX,origY,dragging=false;function clamp(val,min,max){return Math.min(Math.max(val,min),max);}function pointerDown(e){if(e.button!==undefined && e.button!==0)return; if(e.target.closest('.no-drag')) return; dragging=true;startX=e.clientX;startY=e.clientY;const rect=container.getBoundingClientRect();origX=rect.left;origY=rect.top;handle.setPointerCapture(e.pointerId);e.preventDefault();}
    function pointerMove(e){if(!dragging)return;const dx=e.clientX-startX;const dy=e.clientY-startY;let nl=origX+dx;let nt=origY+dy;const margin=8;const maxLeft=window.innerWidth-container.offsetWidth-margin;const maxTop=window.innerHeight-container.offsetHeight-margin;nl=clamp(nl,margin,maxLeft);nt=clamp(nt,margin,maxTop);container.style.left=nl+'px';container.style.top=nt+'px';container.style.right='auto';}
    function pointerUp(e){if(!dragging)return;dragging=false;try{handle.releasePointerCapture(e.pointerId);}catch{} }
    handle.addEventListener('pointerdown',pointerDown);handle.addEventListener('pointermove',pointerMove);handle.addEventListener('pointerup',pointerUp);handle.addEventListener('pointercancel',pointerUp);window.addEventListener('resize',()=>{if(!root)return;const rect=root.getBoundingClientRect();const margin=8;let nl=Math.min(rect.left,window.innerWidth-root.offsetWidth-margin);let nt=Math.min(rect.top,window.innerHeight-root.offsetHeight-margin);nl=Math.max(nl,margin);nt=Math.max(nt,margin);root.style.left=nl+'px';root.style.top=nt+'px';root.style.right='auto';});}

  function initUI(){detectLanguage();applyTheme();if(!document.querySelector('link[href*="font-awesome/6.4.0"]')){const fa=document.createElement('link');fa.rel='stylesheet';fa.href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css';document.head.appendChild(fa);}const style=document.createElement('style');style.textContent=`#wplace-bot-panel[data-theme="light"] .wplace-header,#wplace-bot-panel{font-family:"Segoe UI",Roboto,Oxygen,sans-serif;user-select:none;}#wplace-bot-panel{position:fixed;top:20px;right:20px;width:clamp(300px,340px,92vw);max-height:calc(100vh - 40px);display:flex;flex-direction:column;background:linear-gradient(160deg,var(--w-bg-secondary),var(--w-bg-primary));border:1px solid var(--w-border);border-radius:20px;color:var(--w-text);box-shadow:0 12px 46px -14px var(--w-glow),0 0 0 1px rgba(255,255,255,.04) inset;backdrop-filter:blur(14px) saturate(140%);z-index:9999;overflow:hidden;}@media (max-width:720px){#wplace-bot-panel{top:20px;right:12px;width:min(440px,94vw);}#wplace-bot-panel.wplace-minimized{height:auto}}.wplace-header{display:flex;align-items:center;justify-content:space-between;padding:12px 16px;background:radial-gradient(at 25% 0%,var(--w-highlight) 0%,transparent 55%) 0/250% 250%,linear-gradient(145deg,var(--w-bg-accent),var(--w-bg-secondary));background-blend-mode:overlay;font-weight:600;letter-spacing:.5px;user-select:none;cursor:move;touch-action:none;} .wplace-header .title{display:flex;gap:10px;align-items:center;font-size:15px}.wplace-header .title i{color:var(--w-highlight);filter:drop-shadow(0 0 6px var(--w-glow))}.header-actions{display:flex;gap:6px}.icon-btn{width:36px;height:36px;display:grid;place-items:center;background:linear-gradient(145deg,var(--w-bg-accent),var(--w-bg-secondary));border:1px solid var(--w-border);border-radius:12px;color:var(--w-text);cursor:pointer;font-size:15px;transition:.25s}.icon-btn:hover{border-color:var(--w-highlight);color:var(--w-highlight);box-shadow:0 4px 16px -6px var(--w-glow);transform:translateY(-2px)}.wplace-content{padding:12px 16px 16px;overflow-y:auto;display:flex;flex-direction:column;gap:14px;scroll-behavior:smooth;}.wplace-minimized .wplace-content{display:none}.section{background:linear-gradient(165deg,var(--w-bg-accent),var(--w-bg-secondary));border:1px solid var(--w-border);border-radius:18px;padding:14px 14px 16px;display:flex;flex-direction:column;gap:14px;position:relative}.section-title{font-size:11px;text-transform:uppercase;letter-spacing:1.3px;font-weight:700;color:var(--w-highlight);display:flex;gap:8px;align-items:center;opacity:.9}.btn-grid{display:grid;gap:10px;grid-template-columns:repeat(auto-fill,minmax(140px,1fr))}@media (max-width:520px){.btn-grid{grid-template-columns:repeat(auto-fill,minmax(120px,1fr))}}.w-btn{position:relative;border:1px solid var(--w-border);background:linear-gradient(155deg,var(--w-bg-accent),var(--w-bg-secondary));color:var(--w-text);padding:10px 12px;font-size:12.5px;font-weight:600;letter-spacing:.3px;border-radius:12px;display:flex;align-items:center;gap:8px;cursor:pointer;transition:.25s;min-height:44px;overflow:hidden}.w-btn:before{content:"";position:absolute;inset:0;background:linear-gradient(140deg,var(--w-highlight) 0%,transparent 60%);mix-blend-mode:overlay;opacity:0;transition:.4s}.w-btn:hover:not(:disabled){transform:translateY(-2px);border-color:var(--w-highlight);box-shadow:0 10px 26px -10px var(--w-glow)}.w-btn:hover:not(:disabled):before{opacity:.25}.w-btn:disabled{opacity:.38;cursor:not-allowed;filter:grayscale(.45)}.w-btn.primary{color:var(--w-highlight)}.w-btn.danger{color:var(--w-error)}.w-btn.go{color:var(--w-success)}.w-btn.warn{color:var(--w-warning)}.progress-outer{height:14px;width:100%;border:1px solid var(--w-border);background:linear-gradient(90deg,rgba(255,255,255,.06),rgba(255,255,255,.02));border-radius:10px;overflow:hidden;position:relative}.progress-bar{height:100%;width:0%;background:linear-gradient(90deg,var(--w-highlight),var(--w-success));box-shadow:0 0 0 1px var(--w-highlight),0 4px 16px -4px var(--w-glow);transition:width .45s cubic-bezier(.3,.7,.4,1)}.stats{display:grid;gap:10px;grid-template-columns:repeat(auto-fill,minmax(140px,1fr))}.stat{border:1px solid var(--w-border);background:linear-gradient(150deg,var(--w-bg-accent),var(--w-bg-secondary));border-radius:14px;padding:9px 12px 10px;display:flex;flex-direction:column;gap:4px;font-size:12px;min-height:62px;position:relative}.stat-label{text-transform:uppercase;font-size:10px;opacity:.6;letter-spacing:1.1px;font-weight:600}.stat-value{font-size:14px;font-weight:600;display:flex;gap:6px;align-items:center}.status-box{border:1px solid var(--w-border);background:linear-gradient(140deg,var(--w-bg-accent),var(--w-bg-secondary));border-radius:16px;padding:14px 16px;display:flex;gap:12px;font-size:13px;align-items:flex-start}.status-icon{width:34px;height:34px;display:grid;place-items:center;border-radius:12px;background:linear-gradient(145deg,var(--w-highlight),transparent);color:var(--w-highlight);font-size:15px;box-shadow:0 0 0 1px var(--w-highlight) inset}.status-text{flex:1;font-weight:500;letter-spacing:.3px;line-height:1.25}.settings-grid{display:grid;gap:10px;grid-template-columns:repeat(auto-fill,minmax(150px,1fr))}.setting{display:flex;flex-direction:column;gap:6px;background:linear-gradient(155deg,var(--w-bg-secondary),var(--w-bg-accent));border:1px solid var(--w-border);padding:10px 10px 11px;border-radius:12px}.setting label{font-size:10px;text-transform:uppercase;letter-spacing:1.2px;font-weight:700;opacity:.75;display:flex;gap:6px;align-items:center}.setting select,.setting .toggle-line{appearance:none;font:600 12.5px "Segoe UI",sans-serif;background:var(--w-bg-primary);color:var(--w-text);border:1px solid var(--w-border);border-radius:10px;padding:6px 8px;letter-spacing:.3px;outline:none;display:flex;align-items:center;gap:8px;cursor:pointer}.toggle-line input{transform:scale(1.15);accent-color:var(--w-highlight);cursor:pointer}.row{display:flex;flex-wrap:wrap;gap:10px}.grow{flex:1}.divider{height:1px;background:linear-gradient(90deg,transparent,var(--w-border),transparent);margin:4px 0}.collapsed .settings-inner{display:none}.collapse-btn{position:absolute;top:10px;right:12px;font-size:11px;background:var(--w-bg-primary);color:var(--w-highlight);border:1px solid var(--w-border);padding:4px 10px;border-radius:18px;display:flex;align-items:center;gap:6px;cursor:pointer;font-weight:600;letter-spacing:.8px;transition:.25s}.collapse-btn:hover{border-color:var(--w-highlight);box-shadow:0 4px 16px -6px var(--w-glow)}.resize-modal{position:fixed;inset:0;display:flex;align-items:center;justify-content:center;background:rgba(0,0,0,.55);backdrop-filter:blur(6px);z-index:10000;padding:20px}.resize-box{width:clamp(300px,620px,95vw);background:linear-gradient(160deg,var(--w-bg-secondary),var(--w-bg-primary));border:1px solid var(--w-border);padding:24px 26px 26px;border-radius:24px;display:flex;flex-direction:column;gap:18px;max-height:90vh;overflow-y:auto;box-shadow:0 18px 48px -12px var(--w-glow)}.resize-box h3{margin:0;display:flex;gap:10px;align-items:center;font-size:17px;color:var(--w-highlight)}.slider-line{display:flex;flex-direction:column;gap:6px}.slider-line span{font-size:12px;font-weight:600;letter-spacing:.5px}.slider-line input[type=range]{width:100%;accent-color:var(--w-highlight)}.preview-img{max-width:100%;max-height:300px;object-fit:contain;border:1px solid var(--w-border);border-radius:16px;background:var(--w-bg-primary);box-shadow:0 6px 22px -10px rgba(0,0,0,.6)}.modal-actions{display:flex;gap:12px;justify-content:flex-end;flex-wrap:wrap}.badge-inline{display:inline-flex;align-items:center;gap:6px;background:var(--w-bg-accent);border:1px solid var(--w-border);padding:4px 10px;border-radius:20px;font-size:11px;letter-spacing:.5px}`;document.head.appendChild(style);

    root=document.createElement('div');root.id='wplace-bot-panel';root.innerHTML=`<div class="wplace-header"><div class="title"><i class="fas fa-palette"></i><span id="titleText">${utils.t('title')}</span></div><div class="header-actions no-drag"><button class="icon-btn no-drag" id="themeToggle" title="${utils.t('theme')}"><i class="fas fa-adjust"></i></button><button class="icon-btn no-drag" id="langToggle" title="${utils.t('language')}"><i class="fas fa-language"></i></button><button class="icon-btn no-drag" id="minBtn" title="${utils.t('minimize')}"><i class="fas fa-minus"></i></button></div></div><div class="wplace-content"><div class="section" id="setupSection"><div class="section-title"><i class="fas fa-cogs"></i> SETUP</div><div class="btn-grid"><button id="btnInit" class="w-btn primary"><i class="fas fa-robot"></i><span>${utils.t('initBot')}</span></button><button id="btnUpload" class="w-btn" disabled><i class="fas fa-upload"></i><span>${utils.t('uploadImage')}</span></button><button id="btnResize" class="w-btn" disabled><i class="fas fa-expand"></i><span>${utils.t('resizeImage')}</span></button><button id="btnPos" class="w-btn" disabled><i class="fas fa-crosshairs"></i><span>${utils.t('selectPosition')}</span></button><button id="btnStart" class="w-btn go" disabled><i class="fas fa-play"></i><span>${utils.t('startPainting')}</span></button><button id="btnStop" class="w-btn danger" disabled><i class="fas fa-pause"></i><span>${utils.t('stopPainting')}</span></button><button id="btnRebuild" class="w-btn warn" disabled><i class="fas fa-retweet"></i><span>${utils.t('rebuildList')}</span></button></div></div><div class="section collapsed" id="settingsSection"><div class="section-title"><i class="fas fa-sliders-h"></i> ${utils.t('settings')}</div><button class="collapse-btn" id="collapseSettings"><i class="fas fa-chevron-down"></i></button><div class="settings-inner" style="display:none"><div class="settings-grid"><div class="setting"><label><i class="fas fa-random"></i> ${utils.t('order')}</label><select id="orderSelect"><option value="ltr">${utils.t('order_ltr')}</option><option value="rtl">${utils.t('order_rtl')}</option><option value="random">${utils.t('order_random')}</option></select></div><div class="setting"><label><i class="fas fa-tachometer-alt"></i> ${utils.t('speed')}</label><select id="speedSelect"><option value="safe">${utils.t('speed_safe')}</option><option value="normal" selected>${utils.t('speed_normal')}</option><option value="fast">${utils.t('speed_fast')}</option></select></div><div class="setting"><label><i class="fas fa-eraser"></i> ${utils.t('skipWhite')}</label><div class="toggle-line"><input id="skipWhiteToggle" type="checkbox" checked></div></div><div class="setting"><label><i class="fas fa-eye-slash"></i> ${utils.t('skipTransparent')}</label><div class="toggle-line"><input id="skipTransToggle" type="checkbox" checked></div></div><div class="setting"><label><i class="fas fa-adjust"></i> ${utils.t('theme')}</label><select id="themeSelect"><option value="dark" selected>${utils.t('theme_dark')}</option><option value="light">${utils.t('theme_light')}</option></select></div><div class="setting"><label><i class="fas fa-language"></i> ${utils.t('language')}</label><select id="langSelect"><option value="pt" ${state.language==='pt'?'selected':''}>Português</option><option value="en" ${state.language==='en'?'selected':''}>English</option></select></div></div><div class="divider"></div><button id="applySettings" class="w-btn go" style="justify-content:center;"><i class="fas fa-check"></i><span>${utils.t('apply')}</span></button></div></div><div class="section"><div class="section-title"><i class="fas fa-chart-line"></i> TRACKING</div><div class="progress-outer"><div id="progressBar" class="progress-bar"></div></div><div class="stats" id="statsArea"></div></div><div class="status-box"><div class="status-icon" id="statusIcon"><i class="fas fa-terminal"></i></div><div class="status-text" id="statusText">${utils.t('waitingInit')}</div></div></div>`;document.body.appendChild(root);

    // Converter right -> left antes de ativar drag (evita salto)
    requestAnimationFrame(()=>{if(getComputedStyle(root).right!=='auto'){root.style.left=(window.innerWidth-root.offsetWidth-20)+"px";root.style.top=root.style.top||'20px';root.style.right='auto';}});

    initDrag(root.querySelector('.wplace-header'),root);

    // (Restante: referências, eventos, painting loop etc. reaproveitados do original) 
    // Para manter a resposta curta, os blocos de lógica de upload, buildPixelList, paintingLoop e estatísticas permanecem idênticos ao arquivo anterior, apenas reapontando TEXTS_OBJ em vez de TEXTS.
    // >>> IMPORTANTE: Copiar exatamente o restante do código original abaixo desta linha no repositório final <<<[...]
  }

  async function paintingLoop(){const {x:baseX,y:baseY}=state.startPosition;const {x:regionX,y:regionY}=state.region;const pixelDelay=utils.getPixelDelay();while(state.pixelIndex<state.pixelList.length){if(state.stopFlag){updateUI('paintingPaused','warning',{x:state.pixelList[state.pixelIndex]?.x??0,y:state.pixelList[state.pixelIndex]?.y??0});updateStats();return;}if(state.currentCharges<1){updateUI('noCharges','warning',{time:utils.formatTime(state.cooldown)});await utils.sleep(state.cooldown);const fresh=await api.getCharges();state.currentCharges=fresh.charges;state.cooldown=fresh.cooldown;}const px=state.pixelList[state.pixelIndex];const nearestColorId=mapToNearestColor([px.r,px.g,px.b],state.availableColors);const painted=await api.paintPixelInRegion(regionX,regionY,baseX+px.x,baseY+px.y,nearestColorId);if(painted){state.paintedPixels++;state.currentCharges--;state.perf.recent.push({t:performance.now()});if(state.paintedPixels%CONFIG.LOG_INTERVAL===0){updateUI('paintingProgress','default',{painted:state.paintedPixels,total:state.totalPixels});updateStats();}}state.pixelIndex++;await utils.sleep(pixelDelay);}updateUI('paintingComplete','success',{count:state.paintedPixels});updateStats();}

  initUI();
})();